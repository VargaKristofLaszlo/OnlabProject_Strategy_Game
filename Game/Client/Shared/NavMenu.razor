@inject Helpers.CityIndexState CityIndexState
@inject Helpers.CityResourceState CityResourceState
@inject Helpers.CityDetailsState CityDetailsState
@inject IDialogService DialogService
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject Helpers.HubListener HubListener

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Game</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">


        @if (AdminLogin)
        {
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="/Admin/Account/management" style="color:white">
                            <span class="oi oi-list-rich" aria-hidden="true" style="color:brown"></span> Account management
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="/Admin/Cost" style="color:white">
                            <span class="oi oi-list-rich" aria-hidden="true" style="color:brown"></span> Cost management
                        </NavLink>
                    </li>
                </Authorized>
            </AuthorizeView>
        }
        else
        {
            <AuthorizeView Roles="User">
                <Authorized>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Home
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="/map" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Map
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="/Reports" Match="NavLinkMatch.All">
                            <span class="oi oi-home" aria-hidden="true"></span> Reports
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick=@( () => NavigateTo("chat") ) Match="NavLinkMatch.All">
                            <span class="oi oi-home" style="color: @(HubListener.HasUnreadMessage ? "red" : "white")"
                                  aria-hidden="true"></span> Chat
                        </NavLink>
                    </li>

                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="NavigateToBarrack" Match="NavLinkMatch.All">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Barrack
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("City hall"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> City hall
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("City wall"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> City wall
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("Farm"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Farm
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("Lumber"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Lumber
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("Silver mine"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Silver mine
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("Stone mine"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Stone mine
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick="@( () =>SelectContentForDialog("Warehouse"))">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Warehouse
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick=@( () => NavigateTo("castle") ) Match="NavLinkMatch.All">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Castle
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" @onclick=@( () => NavigateTo("tavern") ) Match="NavLinkMatch.All">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Tavern
                        </NavLink>
                    </li>
                </Authorized>
            </AuthorizeView>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private bool AdminLogin = false;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void NavigateTo(string destination)
    {
        if (destination.Equals("chat"))
            HubListener.HasUnreadMessage = false;
        StateHasChanged();

        NavigationManager.NavigateTo($"{destination}");
    }

    private void NavigateToBarrack()
    {
        NavigationManager.NavigateTo($"barrack/{CityDetailsState.CityDetails.BarrackStage}");
    }

    private void OpenDialog(string buildingName)
    {
        DialogService.Show<Pages.GeneralBuildingDialog>("Simple Dialog");
    }

    private void SelectContentForDialog(string buildingName)
    {
        var buildingInformation = CityDetailsState.CreateBuildingInformation(buildingName);

        var parameters = new DialogParameters();
        parameters.Add("Information", buildingInformation);

        DialogOptions noCloseButton = new DialogOptions() { CloseButton = false };

        DialogService.Show<Pages.GeneralBuildingDialog>(buildingInformation.Header, parameters: parameters);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        var roleClaim = authState.User.Claims.FirstOrDefault(x => x.Type.Equals("role"));

        if (roleClaim != null && roleClaim.Value.Equals("Admin"))
            AdminLogin = true;

        else
            AdminLogin = false;
    }
}
