@page "/Attack"
@using Game.Shared.Models.Request
@using Game.Shared.Models
@using System.Net.Http.Headers
@using System.ComponentModel.DataAnnotations;
@inject HttpClient httpClient

<EditForm Model="AccessToken" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="AccesToken" @bind-Value="AccessToken.AccessToken" />

    <button type="submit">Submit</button>
</EditForm>

<p>@answer</p>

@code {
    public class ModelClass
    {
        [Required]
        public string AccessToken { get; set; }
    }

    private ModelClass AccessToken = new ModelClass();
    private string answer;

    private async Task HandleValidSubmit()
    {
        AttackRequest request = new AttackRequest();

        Dictionary<string, int> attackingForces = new Dictionary<string, int>();
        attackingForces.Add("Spearman", 35);

        request = new AttackRequest()
        {
            AttackType = AttackType.Looting,
            AttackingForces = attackingForces,
            AttackedUserId = "b987a2ab-0fc2-4c37-b0e7-f9e12fc6a3cd",
            AttackedCityIndex = 0,
            AttackerCityIndex = 0
        };

        var httpResponse = await AttackAsync(request);
        answer = await httpResponse.Content.ReadAsStringAsync();
    }
    public async Task<HttpResponseMessage> AttackAsync(AttackRequest request)
    {
        httpClient.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", AccessToken.AccessToken);
        return await httpClient.PostAsJsonAsync("https://localhost:44394/api/Game/Attack", request);
    }
}
