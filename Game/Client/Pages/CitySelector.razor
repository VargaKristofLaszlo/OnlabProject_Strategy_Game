@using System.Collections.Generic
@inject Game.Shared.IServices.IViewService IViewService
@inject Helpers.CityIndexState CityIndexState
@implements IDisposable




@if (_cityNames == null)
{
    <p>Loading..</p>
}
else
{
    <span class="mt-4"> @_cityNames.ElementAt(CityIndex)</span>

    <MudMenu Icon="@Icons.Material.Filled.List" Color="Color.Primary" Direction="Direction.Right" OffsetX="true">
        @foreach (var cityName in _cityNames)
        {
            <MudMenuItem OnClick="() => HandlerCityNameOnClick(_cityNames.IndexOf(cityName))">@cityName</MudMenuItem>
        }
    </MudMenu>
}


@code {
    [Parameter]
    public int CityIndex { get; set; } = 0;

    private List<string> _cityNames;

    protected override async Task OnInitializedAsync()
    {
        var names = await IViewService.GetCityNamesOfUser();
        _cityNames = names.ToList();
    }

    protected override void OnInitialized()
    {
        CityIndexState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CityIndexState.OnChange += StateHasChanged;
    }


    private void HandlerCityNameOnClick(int i)
    {
        CityIndexState.SetIndex(i);

        Console.WriteLine(CityIndexState.Index);
    }
}
