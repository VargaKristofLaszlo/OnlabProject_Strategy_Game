@inject HttpClient http
@inject IJSRuntime JSRuntime
@inject Helpers.CityResourceState CityResourceState
@implements IDisposable
@if (_cityResources == null)
{

}
else
{
    <div class="d-inline-flex ml-auto mr-5 pr-4 mt-4">
        <table>
            <tbody class="tooltip-wood">
                <tr>
                    <td><i class="fas fa-tree"></i></td>
                    <td>@CityResourceState.Wood</td>
                </tr>
                <tr id="wood-production">
                    <td>Wood</td>
                    <td>@_cityResources.WoodProductionPerHour per hour</td>
                </tr>
                <tr id="wood-capacity">
                    <td>Warehouse size</td>
                    <td>@CityResourceState.WarehouseCapacity.WoodLimit</td>
                </tr>
            </tbody>
            <tbody class="tooltip-stone ml-1">
                <tr>
                    <td><i class="fas fa-gem"></i></td>
                    <td>@CityResourceState.Stone</td>
                </tr>
                <tr id="stone-production">
                    <td>Stone</td>
                    <td>@_cityResources.StoneProductionPerHour per hour</td>
                </tr>
                <tr id="stone-capacity">
                    <td>Warehouse size</td>
                    <td>@CityResourceState.WarehouseCapacity.StoneLimit</td>
                </tr>
            </tbody>
            <tbody class="tooltip-silver ml-1">
                <tr>
                    <td><i class="fas fa-coins"></i></td>
                    <td>@CityResourceState.Silver</td>
                </tr>
                <tr id="silver-production">
                    <td>Silver</td>
                    <td>@_cityResources.SilverProductionPerHour per hour</td>
                </tr>
                <tr id="silver-capacity">
                    <td>Warehouse size</td>
                    <td>@CityResourceState.WarehouseCapacity.SilverLimit</td>
                </tr>
            </tbody>
            <tbody class="tooltip-population ml-1">
                <tr>
                    <td><i class="fas fa-user"></i></td>
                    <td>@CityResourceState.Population</td>
                </tr>
                <tr id="max-population">
                    <td>Total provisions provided</td>
                    <td>@_cityResources.TotalPopulation</td>
                </tr>
            </tbody>
        </table>
    </div>
}

@code {

    [Parameter]
    public int CityIndex { get; set; } = 0;

    private CityResources _cityResources = null;    

    protected override async Task OnInitializedAsync()
    {
        ViewServices viewServices = new ViewServices(http);
        var httpResponse = await viewServices.GetResourcesOfTheCity(CityIndex);
        _cityResources = await httpResponse.Content.ReadFromJsonAsync<CityResources>();

        httpResponse = await viewServices.GetWarehouseCapacity(CityIndex);
        WarehouseCapacity _warehouseCapacity = await httpResponse.Content.ReadFromJsonAsync<WarehouseCapacity>();

        CityResourceState.SetInitValue(new Resources
        {
            Wood = _cityResources.WoodAmount,
            Stone = _cityResources.StoneAmount,
            Silver = _cityResources.SilverAmount,
            Population = _cityResources.FreePopulation
        },_warehouseCapacity);
    }

    protected override void OnInitialized()
    {
        CityResourceState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CityResourceState.OnChange -= StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("HoverBehaviour");
    }
}
