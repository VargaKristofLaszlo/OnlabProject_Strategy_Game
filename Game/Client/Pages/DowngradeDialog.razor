@inject HttpClient http

@inject IDialogService DialogService


<MudDialog>
    <DialogContent>
        Downgrade the building
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>



@code {
    @code {
        [CascadingParameter] MudDialogInstance MudDialog { get; set; }

        [Parameter]
        public int CurrentStage { get; set; }

        [Parameter]
        public string BuildingName { get; set; }

        [Parameter]
        public int CityIndex { get; set; }

        async Task Submit()
        {
            GameServices gameServices = new GameServices(http);
            var httpResponse = await gameServices.DowngradeBuilding(CityIndex, BuildingName, CurrentStage - 1);
            var previousStageCostResponse = await new ViewServices(http).GetBuildingUpgradeCost(BuildingName, CurrentStage);

            if (httpResponse.StatusCode == System.Net.HttpStatusCode.OK)
            {
                var content = await httpResponse.Content.ReadFromJsonAsync<SuccessfulBuildingStageModification>();
                
                MudDialog.Close(DialogResult.Ok(content));
            }
            else
            {
                MudDialog.Close(DialogResult.Cancel());
            }

        }
        void Cancel() => MudDialog.Cancel();
    }

}
